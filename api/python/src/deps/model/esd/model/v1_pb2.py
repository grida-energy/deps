# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: deps/model/esd/model.v1.proto
# Protobuf Python Version: 6.32.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    32,
    0,
    '',
    'deps/model/esd/model.v1.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1d\x64\x65ps/model/esd/model.v1.proto\x12\x11\x64\x65ps.model.esd.v1\"\xf3\x0f\n\nEsdSummary\x12\x0b\n\x03soc\x18\x01 \x01(\x02\x12\x0b\n\x03\x64od\x18\x02 \x01(\x02\x12\x0b\n\x03soh\x18\x03 \x01(\x02\x12\r\n\x05n_cyc\x18\x04 \x01(\r\x12\x33\n\x06\x63ha_st\x18\x05 \x01(\x0e\x32#.deps.model.esd.v1.EsdSummary.ChaSt\x12\n\n\x02hb\x18\x07 \x01(\r\x12\x32\n\x05state\x18\x0b \x01(\x0e\x32#.deps.model.esd.v1.EsdSummary.State\x12\x11\n\tstate_vnd\x18\x0c \x01(\r\x12\x30\n\x04\x65vt1\x18\x0e \x01(\x0b\x32\".deps.model.esd.v1.EsdSummary.Evt1\x12\t\n\x01v\x18\x14 \x01(\x02\x12\r\n\x05v_max\x18\x15 \x01(\x02\x12\r\n\x05v_min\x18\x16 \x01(\x02\x12\x39\n\x08\x63nt_cell\x18\x17 \x01(\x0b\x32\'.deps.model.esd.v1.EsdSummary.CellCount\x12\t\n\x01\x61\x18\x1e \x01(\x02\x12\x11\n\ta_cha_max\x18\x1f \x01(\x02\x12\x14\n\x0c\x61_discha_max\x18  \x01(\x02\x12\t\n\x01w\x18! \x01(\x02\x12\x33\n\x06set_op\x18$ \x01(\x0e\x32#.deps.model.esd.v1.EsdSummary.SetOp\x12(\n\x04\x62\x61nk\x18\x32 \x01(\x0b\x32\x1a.deps.model.esd.v1.EsdBank\x1a\xec\x06\n\x04\x45vt1\x12\x1b\n\x13\x43OMMUNICATION_ERROR\x18\x01 \x01(\x08\x12\x17\n\x0fOVER_TEMP_ALARM\x18\x02 \x01(\x08\x12\x19\n\x11OVER_TEMP_WARNING\x18\x03 \x01(\x08\x12\x18\n\x10UNDER_TEMP_ALARM\x18\x04 \x01(\x08\x12\x1a\n\x12UNDER_TEMP_WARNING\x18\x05 \x01(\x08\x12!\n\x19OVER_CHARGE_CURRENT_ALARM\x18\x06 \x01(\x08\x12#\n\x1bOVER_CHARGE_CURRENT_WARNING\x18\x07 \x01(\x08\x12$\n\x1cOVER_DISCHARGE_CURRENT_ALARM\x18\x08 \x01(\x08\x12&\n\x1eOVER_DISCHARGE_CURRENT_WARNING\x18\t \x01(\x08\x12\x17\n\x0fOVER_VOLT_ALARM\x18\n \x01(\x08\x12\x19\n\x11OVER_VOLT_WARNING\x18\x0b \x01(\x08\x12\x18\n\x10UNDER_VOLT_ALARM\x18\x0c \x01(\x08\x12\x1a\n\x12UNDER_VOLT_WARNING\x18\r \x01(\x08\x12\x1b\n\x13UNDER_SOC_MIN_ALARM\x18\x0e \x01(\x08\x12\x1d\n\x15UNDER_SOC_MIN_WARNING\x18\x0f \x01(\x08\x12\x1a\n\x12OVER_SOC_MAX_ALARM\x18\x10 \x01(\x08\x12\x1c\n\x14OVER_SOC_MAX_WARNING\x18\x11 \x01(\x08\x12!\n\x19VOLTAGE_IMBALANCE_WARNING\x18\x12 \x01(\x08\x12#\n\x1bTEMPERATURE_IMBALANCE_ALARM\x18\x13 \x01(\x08\x12%\n\x1dTEMPERATURE_IMBALANCE_WARNING\x18\x14 \x01(\x08\x12\x17\n\x0f\x43ONTACTOR_ERROR\x18\x15 \x01(\x08\x12\x11\n\tFAN_ERROR\x18\x16 \x01(\x08\x12\x14\n\x0cGROUND_FAULT\x18\x17 \x01(\x08\x12\x17\n\x0fOPEN_DOOR_ERROR\x18\x18 \x01(\x08\x12!\n\x19\x43URRENT_IMBALANCE_WARNING\x18\x19 \x01(\x08\x12\x13\n\x0bOTHER_ALARM\x18\x1a \x01(\x08\x12\x15\n\rOTHER_WARNING\x18\x1b \x01(\x08\x12\x12\n\nRESERVED_1\x18\x1c \x01(\x08\x12\x1b\n\x13\x43ONFIGURATION_ALARM\x18\x1d \x01(\x08\x12\x1d\n\x15\x43ONFIGURATION_WARNING\x18\x1e \x01(\x08\x1a\x84\x01\n\tCellCount\x12\r\n\x05v_max\x18\x01 \x01(\x02\x12\x11\n\tv_max_str\x18\x02 \x01(\r\x12\x11\n\tv_max_mod\x18\x03 \x01(\r\x12\r\n\x05v_min\x18\x04 \x01(\x02\x12\x11\n\tv_min_str\x18\x05 \x01(\r\x12\x11\n\tv_min_mod\x18\x06 \x01(\r\x12\r\n\x05v_avg\x18\x07 \x01(\x02\x1aG\n\x07\x43ommand\x12\x35\n\x06set_op\x18\x01 \x01(\x0e\x32#.deps.model.esd.v1.EsdSummary.SetOpH\x00\x42\x05\n\x03\x63md\"\x9e\x01\n\x05\x43haSt\x12\r\n\tCHA_ST_NA\x10\x00\x12\x0e\n\nCHA_ST_OFF\x10\x01\x12\x10\n\x0c\x43HA_ST_EMPTY\x10\x02\x12\x16\n\x12\x43HA_ST_DISCHARGING\x10\x03\x12\x13\n\x0f\x43HA_ST_CHARGING\x10\x04\x12\x0f\n\x0b\x43HA_ST_FULL\x10\x05\x12\x12\n\x0e\x43HA_ST_HOLDING\x10\x06\x12\x12\n\x0e\x43HA_ST_TESTING\x10\x07\"\xae\x01\n\x05State\x12\x0c\n\x08STATE_NA\x10\x00\x12\x16\n\x12STATE_DISCONNECTED\x10\x01\x12\x16\n\x12STATE_INITIALIZING\x10\x02\x12\x13\n\x0fSTATE_CONNECTED\x10\x03\x12\x11\n\rSTATE_STANDBY\x10\x04\x12\x18\n\x14STATE_SOC_PROTECTION\x10\x05\x12\x14\n\x10STATE_SUSPENDING\x10\x06\x12\x0f\n\x0bSTATE_FAULT\x10\x63\">\n\x05SetOp\x12\x0c\n\x08SETOP_NA\x10\x00\x12\x11\n\rSETOP_CONNECT\x10\x01\x12\x14\n\x10SETOP_DISCONNECT\x10\x02J\x04\x08\x06\x10\x07J\x04\x08\x08\x10\tJ\x04\x08\t\x10\nJ\x04\x08\r\x10\x0eJ\x04\x08\"\x10#J\x04\x08#\x10$\"\xde\x12\n\x07\x45sdBank\x12)\n\x02st\x18\x01 \x01(\x0e\x32\x1d.deps.model.esd.v1.EsdBank.St\x12\x30\n\x06st_cha\x18\x02 \x01(\x0e\x32 .deps.model.esd.v1.EsdBank.StCha\x12\x37\n\x07\x63nt_mod\x18\x03 \x01(\x0b\x32&.deps.model.esd.v1.EsdBank.ModuleCount\x12\x37\n\x07\x63nt_str\x18\x04 \x01(\x0b\x32&.deps.model.esd.v1.EsdBank.StringCount\x12\x36\n\x08\x63nt_cell\x18\x05 \x01(\x0b\x32$.deps.model.esd.v1.EsdBank.CellCount\x12\x0b\n\x03soc\x18\x06 \x01(\x02\x12\x0b\n\x03\x64od\x18\x07 \x01(\x02\x12\x0b\n\x03soh\x18\x08 \x01(\x02\x12\r\n\x05n_cyc\x18\t \x01(\r\x12\n\n\x02hb\x18\n \x01(\r\x12\t\n\x01v\x18\x0b \x01(\x02\x12\t\n\x01\x61\x18\x0c \x01(\x02\x12\x11\n\ta_cha_max\x18\r \x01(\x02\x12\x14\n\x0c\x61_discha_max\x18\x0e \x01(\x02\x12\t\n\x01w\x18\x0f \x01(\x02\x12\x31\n\x06status\x18\x10 \x01(\x0b\x32!.deps.model.esd.v1.EsdBank.Status\x12\x33\n\x07warning\x18\x11 \x01(\x0b\x32\".deps.model.esd.v1.EsdBank.Warning\x12/\n\x05\x66\x61ult\x18\x12 \x01(\x0b\x32 .deps.model.esd.v1.EsdBank.Fault\x12\x38\n\x06set_op\x18\x13 \x01(\x0e\x32(.deps.model.esd.v1.EsdBank.Command.SetOp\x12*\n\x04strs\x18\x14 \x03(\x0b\x32\x1c.deps.model.esd.v1.EsdString\x1a*\n\x06Status\x12\r\n\x05OTHER\x18\x01 \x01(\x08\x12\x11\n\tOPEN_DOOR\x18\x02 \x01(\x08\x1a\xbc\x02\n\x07Warning\x12\r\n\x05OTHER\x18\x01 \x01(\x08\x12\x11\n\tOVER_TEMP\x18\x02 \x01(\x08\x12\x12\n\nUNDER_TEMP\x18\x03 \x01(\x08\x12\x1b\n\x13OVER_CHARGE_CURRENT\x18\x04 \x01(\x08\x12\x1e\n\x16OVER_DISCHARGE_CURRENT\x18\x05 \x01(\x08\x12\x11\n\tOVER_VOLT\x18\x06 \x01(\x08\x12\x12\n\nUNDER_VOLT\x18\x07 \x01(\x08\x12\x15\n\rUNDER_SOC_MIN\x18\x08 \x01(\x08\x12\x14\n\x0cOVER_SOC_MAX\x18\t \x01(\x08\x12\x19\n\x11VOLTAGE_IMBALANCE\x18\n \x01(\x08\x12\x1d\n\x15TEMPERATURE_IMBALANCE\x18\x0b \x01(\x08\x12\x19\n\x11\x43URRENT_IMBALANCE\x18\x0c \x01(\x08\x12\x15\n\rCONFIGURATION\x18\r \x01(\x08\x1a\x99\x03\n\x05\x46\x61ult\x12\r\n\x05OTHER\x18\x01 \x01(\x08\x12\x11\n\tOVER_TEMP\x18\x02 \x01(\x08\x12\x12\n\nUNDER_TEMP\x18\x03 \x01(\x08\x12\x1b\n\x13OVER_CHARGE_CURRENT\x18\x04 \x01(\x08\x12\x1e\n\x16OVER_DISCHARGE_CURRENT\x18\x05 \x01(\x08\x12\x11\n\tOVER_VOLT\x18\x06 \x01(\x08\x12\x12\n\nUNDER_VOLT\x18\x07 \x01(\x08\x12\x15\n\rUNDER_SOC_MIN\x18\x08 \x01(\x08\x12\x14\n\x0cOVER_SOC_MAX\x18\t \x01(\x08\x12\x19\n\x11VOLTAGE_IMBALANCE\x18\n \x01(\x08\x12\x1d\n\x15TEMPERATURE_IMBALANCE\x18\x0b \x01(\x08\x12\x19\n\x11\x43URRENT_IMBALANCE\x18\x0c \x01(\x08\x12\x15\n\rCONFIGURATION\x18\r \x01(\x08\x12\x1b\n\x13\x43OMMUNICATION_ERROR\x18\x0e \x01(\x08\x12\x17\n\x0f\x43ONTACTOR_ERROR\x18\x0f \x01(\x08\x12\x11\n\tFAN_ERROR\x18\x10 \x01(\x08\x12\x14\n\x0cGROUND_FAULT\x18\x11 \x01(\x08\x1a\x8f\x01\n\x07\x43ommand\x12:\n\x06set_op\x18\x01 \x01(\x0e\x32(.deps.model.esd.v1.EsdBank.Command.SetOpH\x00\"A\n\x05SetOp\x12\r\n\tSET_OP_NA\x10\x00\x12\x12\n\x0eSET_OP_CONNECT\x10\x01\x12\x15\n\x11SET_OP_DISCONNECT\x10\x02\x42\x05\n\x03\x63md\x1a\x93\x01\n\tCellCount\x12\r\n\x05v_max\x18\x01 \x01(\x02\x12\x11\n\tv_max_str\x18\x02 \x01(\r\x12\x11\n\tv_max_mod\x18\x03 \x01(\r\x12\r\n\x05v_min\x18\x04 \x01(\x02\x12\x11\n\tv_min_str\x18\x05 \x01(\r\x12\x11\n\tv_min_mod\x18\x06 \x01(\r\x12\r\n\x05v_avg\x18\x07 \x01(\x02\x12\r\n\x05n_bal\x18\x08 \x01(\r\x1a\x94\x01\n\x0bModuleCount\x12\x0f\n\x07tmp_max\x18\x03 \x01(\x02\x12\x13\n\x0btmp_max_str\x18\x04 \x01(\r\x12\x13\n\x0btmp_max_mod\x18\x05 \x01(\r\x12\x0f\n\x07tmp_min\x18\x06 \x01(\x02\x12\x13\n\x0btmp_min_str\x18\x07 \x01(\r\x12\x13\n\x0btmp_min_mod\x18\x08 \x01(\r\x12\x0f\n\x07tmp_avg\x18\t \x01(\x02\x1a\xc3\x01\n\x0bStringCount\x12\r\n\x05v_max\x18\x01 \x01(\x02\x12\x11\n\tv_max_str\x18\x02 \x01(\r\x12\r\n\x05v_min\x18\x03 \x01(\x02\x12\x11\n\tv_min_str\x18\x04 \x01(\r\x12\r\n\x05v_avg\x18\x05 \x01(\x02\x12\r\n\x05\x61_max\x18\x06 \x01(\x02\x12\x11\n\ta_max_str\x18\x07 \x01(\r\x12\r\n\x05\x61_min\x18\x08 \x01(\x02\x12\x11\n\ta_min_str\x18\t \x01(\r\x12\r\n\x05\x61_avg\x18\n \x01(\x02\x12\x0e\n\x06n_conn\x18\x0b \x01(\r\"\x9e\x01\n\x05StCha\x12\r\n\tST_CHA_NA\x10\x00\x12\x0e\n\nST_CHA_OFF\x10\x01\x12\x10\n\x0cST_CHA_EMPTY\x10\x02\x12\x16\n\x12ST_CHA_DISCHARGING\x10\x03\x12\x13\n\x0fST_CHA_CHARGING\x10\x04\x12\x0f\n\x0bST_CHA_FULL\x10\x05\x12\x12\n\x0eST_CHA_HOLDING\x10\x06\x12\x12\n\x0eST_CHA_TESTING\x10\x07\"\x93\x01\n\x02St\x12\t\n\x05ST_NA\x10\x00\x12\x13\n\x0fST_DISCONNECTED\x10\x01\x12\x13\n\x0fST_INITIALIZING\x10\x02\x12\x10\n\x0cST_CONNECTED\x10\x03\x12\x0e\n\nST_STANDBY\x10\x04\x12\x15\n\x11ST_SOC_PROTECTION\x10\x05\x12\x11\n\rST_SUSPENDING\x10\x06\x12\x0c\n\x08ST_FAULT\x10\x63\"\xc6\x16\n\tEsdString\x12\x36\n\x08\x63on_fail\x18\x02 \x01(\x0e\x32$.deps.model.esd.v1.EsdString.ConFail\x12\x0b\n\x03soc\x18\x03 \x01(\x02\x12\x0b\n\x03\x64od\x18\x04 \x01(\x02\x12\r\n\x05n_cyc\x18\x05 \x01(\r\x12\x0b\n\x03soh\x18\x06 \x01(\x02\x12\t\n\x01\x61\x18\x07 \x01(\x02\x12\t\n\x01v\x18\x08 \x01(\x02\x12\x38\n\x08\x63nt_cell\x18\t \x01(\x0b\x32&.deps.model.esd.v1.EsdString.CellCount\x12\x39\n\x07\x63nt_mod\x18\n \x01(\x0b\x32(.deps.model.esd.v1.EsdString.ModuleCount\x12\x32\n\x06st_con\x18\x0b \x01(\x0b\x32\".deps.model.esd.v1.EsdString.StCon\x12\x33\n\x06status\x18\x0c \x01(\x0b\x32#.deps.model.esd.v1.EsdString.Status\x12\x35\n\x07warning\x18\r \x01(\x0b\x32$.deps.model.esd.v1.EsdString.Warning\x12\x31\n\x05\x66\x61ult\x18\x0e \x01(\x0b\x32\".deps.model.esd.v1.EsdString.Fault\x12<\n\x07set_ena\x18\x0f \x01(\x0e\x32+.deps.model.esd.v1.EsdString.Command.SetEna\x12<\n\x07set_con\x18\x10 \x01(\x0e\x32+.deps.model.esd.v1.EsdString.Command.SetCon\x12*\n\x04mods\x18\x11 \x03(\x0b\x32\x1c.deps.model.esd.v1.EsdModule\x1a\xa7\x05\n\x05StCon\x12\x13\n\x0b\x43ONTACTOR_0\x18\x01 \x01(\x08\x12\x13\n\x0b\x43ONTACTOR_1\x18\x02 \x01(\x08\x12\x13\n\x0b\x43ONTACTOR_2\x18\x03 \x01(\x08\x12\x13\n\x0b\x43ONTACTOR_3\x18\x04 \x01(\x08\x12\x13\n\x0b\x43ONTACTOR_4\x18\x05 \x01(\x08\x12\x13\n\x0b\x43ONTACTOR_5\x18\x06 \x01(\x08\x12\x13\n\x0b\x43ONTACTOR_6\x18\x07 \x01(\x08\x12\x13\n\x0b\x43ONTACTOR_7\x18\x08 \x01(\x08\x12\x13\n\x0b\x43ONTACTOR_8\x18\t \x01(\x08\x12\x13\n\x0b\x43ONTACTOR_9\x18\n \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_10\x18\x0b \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_11\x18\x0c \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_12\x18\r \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_13\x18\x0e \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_14\x18\x0f \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_15\x18\x10 \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_16\x18\x11 \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_17\x18\x12 \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_18\x18\x13 \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_19\x18\x14 \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_20\x18\x15 \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_21\x18\x16 \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_22\x18\x17 \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_23\x18\x18 \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_24\x18\x19 \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_25\x18\x1a \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_26\x18\x1b \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_27\x18\x1c \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_28\x18\x1d \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_29\x18\x1e \x01(\x08\x12\x14\n\x0c\x43ONTACTOR_30\x18\x1f \x01(\x08\x1a\\\n\x06Status\x12\r\n\x05OTHER\x18\x01 \x01(\x08\x12\x11\n\tOPEN_DOOR\x18\x02 \x01(\x08\x12\x16\n\x0eSTRING_ENABLED\x18\x03 \x01(\x08\x12\x18\n\x10\x43ONTACTOR_STATUS\x18\x04 \x01(\x08\x1a\x8a\x02\n\x07Warning\x12\r\n\x05OTHER\x18\x01 \x01(\x08\x12\x11\n\tOVER_TEMP\x18\x02 \x01(\x08\x12\x12\n\nUNDER_TEMP\x18\x03 \x01(\x08\x12\x1b\n\x13OVER_CHARGE_CURRENT\x18\x04 \x01(\x08\x12\x1e\n\x16OVER_DISCHARGE_CURRENT\x18\x05 \x01(\x08\x12\x11\n\tOVER_VOLT\x18\x06 \x01(\x08\x12\x12\n\nUNDER_VOLT\x18\x07 \x01(\x08\x12\x15\n\rUNDER_SOC_MIN\x18\x08 \x01(\x08\x12\x14\n\x0cOVER_SOC_MAX\x18\t \x01(\x08\x12\x19\n\x11VOLTAGE_IMBALANCE\x18\n \x01(\x08\x12\x1d\n\x15TEMPERATURE_IMBALANCE\x18\x0b \x01(\x08\x1a\xfe\x02\n\x05\x46\x61ult\x12\r\n\x05OTHER\x18\x01 \x01(\x08\x12\x11\n\tOVER_TEMP\x18\x02 \x01(\x08\x12\x12\n\nUNDER_TEMP\x18\x03 \x01(\x08\x12\x1b\n\x13OVER_CHARGE_CURRENT\x18\x04 \x01(\x08\x12\x1e\n\x16OVER_DISCHARGE_CURRENT\x18\x05 \x01(\x08\x12\x11\n\tOVER_VOLT\x18\x06 \x01(\x08\x12\x12\n\nUNDER_VOLT\x18\x07 \x01(\x08\x12\x15\n\rUNDER_SOC_MIN\x18\x08 \x01(\x08\x12\x14\n\x0cOVER_SOC_MAX\x18\t \x01(\x08\x12\x19\n\x11VOLTAGE_IMBALANCE\x18\n \x01(\x08\x12\x1d\n\x15TEMPERATURE_IMBALANCE\x18\x0b \x01(\x08\x12\x1b\n\x13\x43OMMUNICATION_ERROR\x18\x0c \x01(\x08\x12\x15\n\rCONFIGURATION\x18\r \x01(\x08\x12\x17\n\x0f\x43ONTACTOR_ERROR\x18\x0e \x01(\x08\x12\x11\n\tFAN_ERROR\x18\x0f \x01(\x08\x12\x14\n\x0cGROUND_FAULT\x18\x10 \x01(\x08\x1a\xb6\x02\n\x07\x43ommand\x12>\n\x07set_con\x18\x01 \x01(\x0e\x32+.deps.model.esd.v1.EsdString.Command.SetConH\x00\x12>\n\x07set_ena\x18\x02 \x01(\x0e\x32+.deps.model.esd.v1.EsdString.Command.SetEnaH\x00\"O\n\x06SetEna\x12\x0e\n\nSET_ENA_NA\x10\x00\x12\x19\n\x15SET_ENA_ENABLE_STRING\x10\x01\x12\x1a\n\x16SET_ENA_DISABLE_STRING\x10\x02\"S\n\x06SetCon\x12\x0e\n\nSET_CON_NA\x10\x00\x12\x1a\n\x16SET_CON_CONNECT_STRING\x10\x01\x12\x1d\n\x19SET_CON_DISCONNECT_STRING\x10\x02\x42\x05\n\x03\x63md\x1ar\n\tCellCount\x12\r\n\x05v_max\x18\x01 \x01(\x02\x12\x11\n\tv_max_mod\x18\x02 \x01(\r\x12\r\n\x05v_min\x18\x03 \x01(\x02\x12\x11\n\tv_min_mod\x18\x04 \x01(\r\x12\r\n\x05v_avg\x18\x05 \x01(\x02\x12\x12\n\nn_cell_bal\x18\x06 \x01(\r\x1aj\n\x0bModuleCount\x12\x0f\n\x07tmp_max\x18\x10 \x01(\x02\x12\x13\n\x0btmp_max_mod\x18\x11 \x01(\r\x12\x0f\n\x07tmp_min\x18\x12 \x01(\x02\x12\x13\n\x0btmp_min_mod\x18\x13 \x01(\r\x12\x0f\n\x07tmp_avg\x18\x14 \x01(\x02\"\x95\x02\n\x07\x43onFail\x12\x17\n\x13\x43ON_FAIL_NO_FAILURE\x10\x00\x12\x1a\n\x16\x43ON_FAIL_BUTTON_PUSHED\x10\x01\x12\x1d\n\x19\x43ON_FAIL_STR_GROUND_FAULT\x10\x02\x12\"\n\x1e\x43ON_FAIL_OUTSIDE_VOLTAGE_RANGE\x10\x03\x12\x1f\n\x1b\x43ON_FAIL_STRING_NOT_ENABLED\x10\x04\x12\x16\n\x12\x43ON_FAIL_FUSE_OPEN\x10\x05\x12\x1e\n\x1a\x43ON_FAIL_CONTACTOR_FAILURE\x10\x06\x12\x1e\n\x1a\x43ON_FAIL_PRECHARGE_FAILURE\x10\x07\x12\x19\n\x15\x43ON_FAIL_STRING_FAULT\x10\x08\"\xc0\x03\n\tEsdModule\x12\x0f\n\x07str_idx\x18\x01 \x01(\r\x12\x0f\n\x07mod_idx\x18\x02 \x01(\r\x12\x0e\n\x06n_cell\x18\x03 \x01(\r\x12\x0b\n\x03soc\x18\x04 \x01(\x02\x12\x0b\n\x03\x64od\x18\x05 \x01(\x02\x12\x0b\n\x03soh\x18\x06 \x01(\x02\x12\r\n\x05n_cyc\x18\x07 \x01(\r\x12\t\n\x01v\x18\x08 \x01(\x02\x12\x38\n\x08\x63nt_cell\x18\t \x01(\x0b\x32&.deps.model.esd.v1.EsdModule.CellCount\x12\n\n\x02sn\x18\n \x01(\t\x12)\n\x05\x63\x65lls\x18\x0c \x03(\x0b\x32\x1a.deps.model.esd.v1.EsdCell\x1a\xce\x01\n\tCellCount\x12\r\n\x05v_max\x18\x01 \x01(\x02\x12\x12\n\nv_max_cell\x18\x02 \x01(\r\x12\r\n\x05v_min\x18\x03 \x01(\x02\x12\x12\n\nv_min_cell\x18\x04 \x01(\r\x12\r\n\x05v_avg\x18\x05 \x01(\x02\x12\x0f\n\x07tmp_max\x18\x06 \x01(\x02\x12\x14\n\x0ctmp_max_cell\x18\x07 \x01(\r\x12\x0f\n\x07tmp_min\x18\x08 \x01(\x02\x12\x14\n\x0ctmp_min_cell\x18\t \x01(\r\x12\x0f\n\x07tmp_avg\x18\n \x01(\x02\x12\r\n\x05n_bal\x18\x0b \x01(\r\"h\n\x07\x45sdCell\x12\t\n\x01v\x18\x01 \x01(\x02\x12\x0b\n\x03tmp\x18\x02 \x01(\x02\x12)\n\x02st\x18\x03 \x01(\x0b\x32\x1d.deps.model.esd.v1.EsdCell.St\x1a\x1a\n\x02St\x12\x14\n\x0cis_balancing\x18\x01 \x01(\x08\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'deps.model.esd.model.v1_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_ESDSUMMARY']._serialized_start=53
  _globals['_ESDSUMMARY']._serialized_end=2088
  _globals['_ESDSUMMARY_EVT1']._serialized_start=566
  _globals['_ESDSUMMARY_EVT1']._serialized_end=1442
  _globals['_ESDSUMMARY_CELLCOUNT']._serialized_start=1445
  _globals['_ESDSUMMARY_CELLCOUNT']._serialized_end=1577
  _globals['_ESDSUMMARY_COMMAND']._serialized_start=1579
  _globals['_ESDSUMMARY_COMMAND']._serialized_end=1650
  _globals['_ESDSUMMARY_CHAST']._serialized_start=1653
  _globals['_ESDSUMMARY_CHAST']._serialized_end=1811
  _globals['_ESDSUMMARY_STATE']._serialized_start=1814
  _globals['_ESDSUMMARY_STATE']._serialized_end=1988
  _globals['_ESDSUMMARY_SETOP']._serialized_start=1990
  _globals['_ESDSUMMARY_SETOP']._serialized_end=2052
  _globals['_ESDBANK']._serialized_start=2091
  _globals['_ESDBANK']._serialized_end=4489
  _globals['_ESDBANK_STATUS']._serialized_start=2760
  _globals['_ESDBANK_STATUS']._serialized_end=2802
  _globals['_ESDBANK_WARNING']._serialized_start=2805
  _globals['_ESDBANK_WARNING']._serialized_end=3121
  _globals['_ESDBANK_FAULT']._serialized_start=3124
  _globals['_ESDBANK_FAULT']._serialized_end=3533
  _globals['_ESDBANK_COMMAND']._serialized_start=3536
  _globals['_ESDBANK_COMMAND']._serialized_end=3679
  _globals['_ESDBANK_COMMAND_SETOP']._serialized_start=3607
  _globals['_ESDBANK_COMMAND_SETOP']._serialized_end=3672
  _globals['_ESDBANK_CELLCOUNT']._serialized_start=3682
  _globals['_ESDBANK_CELLCOUNT']._serialized_end=3829
  _globals['_ESDBANK_MODULECOUNT']._serialized_start=3832
  _globals['_ESDBANK_MODULECOUNT']._serialized_end=3980
  _globals['_ESDBANK_STRINGCOUNT']._serialized_start=3983
  _globals['_ESDBANK_STRINGCOUNT']._serialized_end=4178
  _globals['_ESDBANK_STCHA']._serialized_start=4181
  _globals['_ESDBANK_STCHA']._serialized_end=4339
  _globals['_ESDBANK_ST']._serialized_start=4342
  _globals['_ESDBANK_ST']._serialized_end=4489
  _globals['_ESDSTRING']._serialized_start=4492
  _globals['_ESDSTRING']._serialized_end=7378
  _globals['_ESDSTRING_STCON']._serialized_start=5134
  _globals['_ESDSTRING_STCON']._serialized_end=5813
  _globals['_ESDSTRING_STATUS']._serialized_start=5815
  _globals['_ESDSTRING_STATUS']._serialized_end=5907
  _globals['_ESDSTRING_WARNING']._serialized_start=2805
  _globals['_ESDSTRING_WARNING']._serialized_end=3071
  _globals['_ESDSTRING_FAULT']._serialized_start=6179
  _globals['_ESDSTRING_FAULT']._serialized_end=6561
  _globals['_ESDSTRING_COMMAND']._serialized_start=6564
  _globals['_ESDSTRING_COMMAND']._serialized_end=6874
  _globals['_ESDSTRING_COMMAND_SETENA']._serialized_start=6703
  _globals['_ESDSTRING_COMMAND_SETENA']._serialized_end=6782
  _globals['_ESDSTRING_COMMAND_SETCON']._serialized_start=6784
  _globals['_ESDSTRING_COMMAND_SETCON']._serialized_end=6867
  _globals['_ESDSTRING_CELLCOUNT']._serialized_start=6876
  _globals['_ESDSTRING_CELLCOUNT']._serialized_end=6990
  _globals['_ESDSTRING_MODULECOUNT']._serialized_start=6992
  _globals['_ESDSTRING_MODULECOUNT']._serialized_end=7098
  _globals['_ESDSTRING_CONFAIL']._serialized_start=7101
  _globals['_ESDSTRING_CONFAIL']._serialized_end=7378
  _globals['_ESDMODULE']._serialized_start=7381
  _globals['_ESDMODULE']._serialized_end=7829
  _globals['_ESDMODULE_CELLCOUNT']._serialized_start=7623
  _globals['_ESDMODULE_CELLCOUNT']._serialized_end=7829
  _globals['_ESDCELL']._serialized_start=7831
  _globals['_ESDCELL']._serialized_end=7935
  _globals['_ESDCELL_ST']._serialized_start=7909
  _globals['_ESDCELL_ST']._serialized_end=7935
# @@protoc_insertion_point(module_scope)
