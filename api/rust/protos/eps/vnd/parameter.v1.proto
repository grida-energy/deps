syntax = "proto3";

package eps.vnd.v1;

import "google/protobuf/struct.proto";
// import "eps/rpc/reqresp.proto";

// 제조사 고유 파라미터 메타 정보
message ParamInfo {
  message MinMax {
    float min = 1;
    float max = 2;
  }
  message Enum { map<int32, string> collections = 1; }

  string param_name = 1;
  string description = 2;
  string unit = 3;
  oneof constraint {
    MinMax min_max = 4;
    Enum pick = 5;
  }
}

message ParamMeta { map<uint32, ParamInfo> param_infos = 1; }

message ParamIdRange {
  uint32 start = 1;
  uint32 length = 2;
}

// message ParamId { uint32 param_id = 1; }
// message ParamIdValue {
//   uint32 param_id = 1;
//   .google.protobuf.Value param_value = 2;
// }

message ParamBlock {
  repeated ParamIdRange ranges = 1;
  repeated .google.protobuf.Value values = 2;
}

// -----------------------------------------------
// message ParamIdCode {
//   enum ErrorCode {
//     SUCCESS = 0;
//     NOT_APPLICABLE = 1;
//   }
//   uint32 param_id = 1;
//   ErrorCode param_code = 2;
// }
// message ParamOps {
//   oneof ops {
//     ParamId read = 1;
//     ParamIdValue write = 2;
//   }
// }
// message ParamResult {
//   oneof ops {
//     ParamIdValue read = 1;
//     ParamIdCode write = 2;
//   }
// }

// message Rpc {
//   message ParamReadWriteRequest {
//     repeated ParamIdRange reads = 1;
//     ParamBlock writes = 2;
//   }

//   // error codes would be specified in eps.rpc.Response
//   message ParamReadWriteResponse {
//     // returns successfully read values if possible
//     ParamBlock reads = 1;
//     // returns successfully writen ids if possible
//     repeated ParamIdRange writes = 2;
//   }

//   message ParamRequest {
//     .eps.rpc.Request head = 1;
//     // repeated ParamOps data = 3;
//     ParamReadWriteRequest data = 3;
//   }

//   message ParamResponse {
//     .eps.rpc.Response head = 1;
//     // repeated ParamResult data = 4;
//     ParamReadWriteResponse data = 4;
//   }
// }
